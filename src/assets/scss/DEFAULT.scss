@import url('https://fonts.googleapis.com/css?family=Poppins:300,400,500,600|Josefin+Sans:400,700');
@import 'variables';

body,
html {
  padding: 0; // margin: 8px;
  font-family: 'Poppins', sans-serif;
  background-color: white;
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Chrome/Safari/Opera */
  -khtml-user-select: none;
  /* Konqueror */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently
																	not supported by any browser */
  * {
    box-sizing: border-box;
  }
}

body {
  height: 100vh;
  width: 100%;
}

head {
  display: none;
}

select {
  background: transparent;
  border: none;
  outline: none;
  option {
    color: black !important;
  }
}

// Change the default autofill color
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  border: 0px;
  -webkit-text-fill-color: inherit;
  box-shadow: 0 0 0px 1000px $input-bg inset;
  transition: background-color 5000s ease-in-out 0s;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  padding: 0;

	&.spacey {
    text-transform: uppercase;
    letter-spacing: 2px;
    font-size: 12px;
    font-weight: 600;
	}

	&.error {
		color: $error;
	}
}

p,
a,
span,
li {
  color: $color-secondary;
}

h1,
h2,
h3 {
  font-weight: 600;
}

a {
  text-decoration: none;
	color: inherit;
	cursor: pointer;
  &:visited {
    text-decoration: none;
  }
}

input,
textarea {
  border: none;
  outline: none;
  border-radius: 0;
  font-size: 16px;
  font-family: 'Poppins', sans-serif;
}

@keyframes fade-in-out {
	0% {
		opacity: 0.5;
	}
	30% {
		opacity: 1;
	}
	60% {
		opacity: 0.5;
	}
	100% {
		opacity: 0.5;
	}
}

@keyframes noColor {
  0% {
    color: inherit;
    width: 120px;
  }
  10% {
    color: transparent;
    width: 120px;
  }
  100% {
    color: transparent;
    width: 45px;
  }
}

@keyframes submitAnimation {
  from {
    background-color: transparent;
  }
  to {
    background-color: white;
  }
}

.forms {
	position: fixed;
	top: 0;
	left: 0;
	height: 100vh;
	width: 100vw;
	pointer-events: none;
	z-index: 10;
	opacity: 0;

	&.active {
		pointer-events: all;
		opacity: 1;
	}

	&.users {

		.layout {

			>.input-item {

				&:nth-child(n+1):nth-child(-n+2), &:nth-child(n+4):nth-child(-n+5) {
					width: 50%!important;
					float: left;
					overflow: hidden;
				}
			}
		}
	}

	.swiper-wrapper .swiper-slide {

		&:not( :nth-child( 1 ) ) {
			min-width: 700px;
			width: 30%;
			max-width: 70vw;
		}

		> .empty {
			width: 100vw;
			height: 100vh;
			background: rgba( 255, 255, 255, .5 );
		}

		.space-form {

			.top-bar {
				padding-bottom: 0px!important;

				h1 {
					padding-left: 15px;
				}
			}

			.submit-area {

				p {
					color: $color-primary;
				}
			}
		}
	}
}

.loading-indicator {

	span {
		animation: fade-in-out infinite 1s ease;

		&:nth-child(2) {
			animation-delay: 0.2s;
			-webkit-animation-delay: 0.2s;
		}

		&:nth-child(3) {
			animation-delay: 0.4s;
			-webkit-animation-delay: 0.4s;
		}
	}
}

.button {
  background: $color-primary;
  color: white;
  padding: 10px 20px;
  border-radius: 50px;
  min-width: 120px;
  align-self: center;
	position: relative;
  text-align: center;
  white-space: nowrap;

  &.submitted {
    animation: 1s noColor 1 forwards;
    .check-mark {
      &::before,
      &::after {
        animation: 1s submitAnimation 1 forwards;
      }
    }
	}

	&.error {
		background-color: $red;
	}

  .check-mark {

    &::before {
      content: '';
      width: 4px;
      height: 18px;
      position: absolute;
      transform: translate(-7px, 0) rotate(-35deg);
      bottom: calc(50% - 15px);
      border-radius: 3px;
		}

    &::after {
      content: '';
      width: 4px;
      height: 28px;
      position: absolute;
      transform: translate(3.5px, 0) rotate(30deg);
      bottom: calc(50% - 15.5px);
      border-radius: 3px;
    }
	}

	&.floating {
		background: white;
		color: $color-primary;
		box-shadow: 0px 3px 18px rgba(40,54,63,0.13);
		transition: box-shadow 0.2s ease;
	}

	&.outline {
		display: flex;
		align-items: center;
		background: transparent;
		border: 2px solid $color-primary;
		padding: 5px 8px;
		min-width: unset;

		* {
			color: $color-primary;
		}

		[class^='icon'] {
			margin-right: 5px;

			&::before {
				font-size: 22px;
			}

			+ span {
				margin-right: 8px;
				font-size: 14px;
			}
		}
	}

  &:hover {
		cursor: pointer;
		box-shadow: 0px 4px 24px rgba(40, 54, 63, 0.2);
	}
}

.copy-url {
	position: relative;

	input {
		opacity: 0;
		pointer-events: none;
		position: absolute;
	}

	&.hidden {

		.copied-text {
			opacity: 0;
		}
	}

	&.failed {

		.copied-text {
			background: $error;
			color: white;
			opacity: .8;
		}
	}

	.copied-text {
		position: absolute;
		font-size: 12px;
		font-size: 14px;
		color: $blueGrey;
		background: $lightGrey;
		padding: 5px 15px;
		border-radius: 15px;
		transition: opacity 0.2s ease;
		opacity: 0.8;
		white-space: nowrap;
		right: 0;
		top: calc(100% + 10px);
	}

	.button {
		font-size: 18px;
		margin-left: 15px;
	}
}

.text-error {
	color: $error!important;
	margin-left: 2px!important;
}

.clickable-arrow {
	min-height: 16px;
	min-width: 16px;

	&::before, &::after {
		content: ' ';
		height: 9px;
		width: 2px;
		background: $input-color;
		border-radius: 12px;
		right: 0px;
		position: absolute;
		transition: .2s ease-in-out;
		top: 50%;
		left: 50%;
		transform: translate3d( -50%, -50%, 0 );
		z-index: 2;
	}

	&::before {
		transform: translate(calc(-50% - 3px), -50%) rotate(-45deg);
	}

	&::after {
		transform: translate(calc(-50% + 3px), -50%) rotate(45deg);
	}

	&.open {

		&::before {
			transform: translate3d(-50%, -50%, 0) rotate(45deg);
		}

		&::after {
			transform: translate3d(-50%, -50%, 0) rotate(-45deg);
		}
	}
}

.icon-arrow {
  position: relative;

  &::before,
  &::after {
		content: ' ';
		height: 3px;
		width: 12px;
		border-radius: 2px;
		background: $color-primary;
    position: absolute;
    top: 50%;
    left: 50%;
  }

  &::before {
    transform: translate(-50%, calc(-100% - 2px)) rotate(-45deg);
  }

  &::after {
    transform: translate(-50%, calc(0% + 2px)) rotate(-135deg);
  }
}

.icon-close {
  height: 30px;
  width: 30px;
  position: relative;
	cursor: pointer;

  &::before,
  &::after {
    content: ' ';
    height: 20px;
    width: 2px;
    border-radius: 2px;
    background-color: crimson;
    position: absolute;
    top: 50%;
    left: 50%;
  }

  &::before {
    transform: translate(-50%,-50%) rotate(45deg);
  }

  &::after {
    transform: translate(-50%,-50%) rotate(-45deg);
  }
}

.separate-gradient {
  position: relative;

  &::before {
    content: ' ';
    position: absolute;
    height: 75px;
    width: 100%;
    z-index: 0;
    left: 0;
  }

  &.middle.down::before {
    top: 50%;
  }

  &.middle.up::before {
    bottom: 50%;
  }

  &.down::before {
		background: $gradient__separate-down;
		top: 0;
  }

  &.up::before {
    background: $gradient__separate-up;
	}

	&.right::before {
		background: $gradient__separate-right;
		left: 0;
		width: 75px;
		height: 100%;
	}

  * {
    z-index: 1;
    position: relative;
  }
}

.spacey {
  text-transform: uppercase;
  letter-spacing: 2px;
  color: $input-color;
}

.box {
  border-radius: 15px;
  background: white;
  box-shadow: $inputBoxShadow;
}

.modal-box {
	border-radius: 15px;
	background: white;
	box-shadow: $box-shadow-primary;
	position: absolute;
	min-width: 350px;
	min-height: 500px;
	overflow: hidden;
}

.expand-info {
	position: relative;
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	margin: auto;
	width: fit-content;
	cursor: pointer;

	p {
		color: $alternateGrey;
		font-weight: 300;
	}

	.clickable-arrow {
		position: relative;
		left: 10px;

		&::before, &::after {
			background: $alternateGrey;
		}
	}
}

@media ( max-width: $tablet ) {

	.forms {

		&.active {
			z-index: 3;
			position: fixed;
			overflow-y: scroll;
			pointer-events: all;
		}

		.space-form {
			background: white;
			position: relative;
			z-index: 3;
			max-width: 100vw;
		}
	}
}

@media ( min-width: $tablet ) and ( max-width: $desktop ) {

	.forms {

		.swiper-slide-active {
			min-width: 100%!important;
			width: 100%!important;
			max-width: 100%!important;
		}
	}
}

p.failed {
	color: $error;
}
